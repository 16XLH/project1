一.程序结构设计与分析：
1.先将给的地图字符串和动物字符串中的各数字代表的含义用一维数组分别表示出来，
  再将两者合并为一张完整的地图并利用二维数组的打印方法打印出来。
2.我的project中只有一个main方法。
3.地形数组用的是map[]、动物数组分左右方分别用a左与a右、游戏历史数据用三维数
  组boardHistory[][][]记录、boolean game是用来让整个循环可以进行，而boolean player
  用于判断左右方、A代表指令的第一个数字、q代表下一步所在地如
  果是对方棋子的话它的数字排行、i和j用于循环和打印。
4.写得好的地方：在悔棋和取消悔棋的方法上，用两个变量n和k分别记录行棋的步数和悔棋的步数，使判断
  “已经退回到开局，不能再悔棋了”和“已回到最后记录，不能再取消悔棋了”变得简单：
                            if (nextPosition.equals("undo")) {...}
                 else if (nextPosition.equals("redo")) {...}
  写得不好的地方：由于赶时间和不太会用子方法，只用了一个main方法写完了代码，后来发现用子方法可以
大大减少代码行数，但没有时间改了。              
二.遇到的问题：
   1.检查好几遍代码没看出，后面发现是把&&和||的用法弄错了。
   2.发现如果敌方老鼠在水中时，其他动物可以下水吃老鼠。
   3.在做水的问题时出现了死循环。
   4.在做悔棋和取消悔棋的过程中，出现了棋盘全为零的情况。
   5.在吃子时把文字当作了两个字符。
   6.完成代码后，出现了各种小bug。
   7.不会写注释，代码看起来不好看。
三.解决问题的方法：
   1.在检查时，始终找不出问题，最后每一行每一行地看，才发现。
   2.将方法改变了，不是看地图上的东西，而是改为看其在二维数组中的位置来确定。
   3.自己读了几遍代码，发现是三维数组的记录出了问题，发生了死循环。
   4.记录的三维数组n出现了等于-1的情况。
   5.问同学后解决。
   6.写注释时重新理解了一遍，解决了小bug。
   7.看以往的codeview，找到解决方法。
四.意见与建议:
   我认为我们的lab课应多与导师上课讲的内容相关，便于掌握上课内容;平时多布置一点小lab，不一定要把lab全
   放在lab课上，平时布置一点容易的，简短的lab作为课后练习。
